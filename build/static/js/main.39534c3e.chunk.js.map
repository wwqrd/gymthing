{"version":3,"sources":["ducks/exercises.js","store.js","components/Home/Exercise.js","components/Home/Group.js","components/Home/Home.js","components/Group/Exercise.js","components/Group/Group.js","clock.js","components/Timer.js","components/Exercise/Exercise.js","components/Exercise/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","id","name","weight","reps","sets","group","root","combineReducers","exercises","state","arguments","length","undefined","type","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","Exercise","_ref","react_default","a","createElement","Group","Link","to","concat","map","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onAddGroup","setState","addGroup","Redirect","onClick","groups","Home_Group","PureComponent","connect","groupBy","esm_extends","Group_Exercise","assign","groupId","match","params","filter","exercise","defaultCallbacks","onStart","onStop","onReset","onTick","Clock","callbacks","setClock","clock","newClock","objectSpread","start","active","Date","time","Duration","fromMillis","update","stop","window","cancelAnimationFrame","requestId","tick","now","requestAnimationFrame","toggle","src_clock","Timer","className","toFormat","PHASES","getPhases","phases","push","handleClick","completedSets","handleFinishExercise","e","stopPropagation","handleTimerTick","as","handleTimerReset","renderPhase","phase","phaseClasses","cx","Exercise__phase--active","includes","exerciseClasses","Exercise--over-resting","isOverResting","src_components_Timer","defaultProps","exerciseId","find","App","Switch","Route","exact","path","component","Component","Boolean","location","hostname","ReactDOM","render","es","integration_react","loading","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39534c3e.chunk.js","sourcesContent":["\nconst initialState = [\n  { id: 'foo', name: 'foo', weight: 44, reps: 4, sets: 3, group: 'alpha' },\n  { id: 'bar', name: 'bar', weight: 20, reps: 6, sets: 3, group: 'alpha' },\n  { id: 'bazz', name: 'bazz', weight: 14, reps: 8, sets: 3, group: 'bravo' },\n];\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\n\nconst actionCreators = {\n\n};\n\nconst actionTypes = {\n\n};\n\nexport {\n  actionCreators,\n  actionTypes,\n};\n","import { createStore, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport exercises from './ducks/exercises';\n\nconst root = combineReducers({\n  exercises,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  root,\n);\n\nconst store = createStore(persistedReducer);\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n\nexport default store;\n","import React from 'react';\n\nconst Exercise = ({ name }) => (\n  <div>\n    {name}\n  </div>\n);\n\nexport default Exercise;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Exercise from './Exercise';\n\nconst Group = ({\n  exercises,\n  group,\n}) => (\n  <Link to={`/group/${group}`}>\n    <div>\n      { exercises.map(Exercise) }\n    </div>\n    <div>\n      {group}\n    </div>\n  </Link>\n);\n\nexport { Group };\n\nexport default Group;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { map, groupBy } from 'lodash';\nimport Group from './Group';\n\nclass Home extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { addGroup: false };\n  }\n\n  onAddGroup = () => {\n    this.setState({ addGroup: true });\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.addGroup && <Redirect to=\"/group/new\" /> }\n        <button onClick={this.onAddGroup}>Create new group</button>\n        <div>\n          {map(\n            this.props.groups,\n            (exercises, group) =>\n              <Group\n                key={group}\n                exercises={exercises}\n                group={group}\n              />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const exercises = state.exercises;\n  const groups = groupBy(exercises, 'group');\n\n  return {\n    groups,\n  };\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Exercise = ({ name, id }) => (\n  <Link to={`/exercise/${id}`}>\n    {name}\n  </Link>\n);\n\nexport default Exercise;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Exercise from './Exercise';\n\nclass Group extends PureComponent {\n  render() {\n    return (\n      <div>\n        <div>\n          { this.props.exercises.map(\n            ({ ...props }) =>\n              <Exercise {...props} key={props.id} />\n          ) }\n        </div>\n        <div>\n          {this.props.group}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  const exercises = state.exercises;\n  const groupId = props.match &&\n    props.match.params &&\n    props.match.params.groupId;\n  const groupExercises = exercises.filter(\n    exercise => exercise.group === groupId,\n  );\n\n  return {\n    exercises: groupExercises,\n  };\n}\n\nexport default connect(mapStateToProps)(Group);\n","import { Duration } from 'luxon';\n\nconst defaultCallbacks = {\n  onStart: () => {},\n  onStop: () => {},\n  onReset: () => {},\n  onTick: () => {},\n};\n\nclass Clock {\n  constructor(callbacks) {\n    this.active = false;\n    this.clock = {\n      start: null,\n      time: Duration.fromMillis(0),\n    };\n    this.requestId = null;\n    this.callbacks = {\n      ...defaultCallbacks,\n      ...callbacks,\n    };\n  }\n\n  get time() {\n    return this.clock.time;\n  }\n\n  setClock = (clock) => {\n    const newClock = {\n      ...this.clock,\n      ...clock,\n    };\n\n    this.clock = newClock;\n  };\n\n  start = () => {\n    if (this.active) {\n      this.callbacks.onReset();\n    }\n\n    this.active = true;\n\n    this.setClock({\n      start: new Date(),\n      time: Duration.fromMillis(0),\n    });\n\n    this.update();\n    this.callbacks.onStart();\n  }\n\n  stop = () => {\n    this.active = false;\n    window.cancelAnimationFrame(this.requestId);\n\n    this.setClock({\n      start: null,\n      time: Duration.fromMillis(0),\n    });\n\n    this.callbacks.onStop();\n  };\n\n  tick = () => {\n    const now = new Date();\n    const time = Duration.fromMillis(now - this.clock.start);\n\n    this.callbacks.onTick(time);\n\n    this.setClock({\n      time,\n    });\n  }\n\n  update = () => {\n    if (!this.active) { return; }\n    this.tick();\n    this.requestId = window.requestAnimationFrame(() => this.update());\n  }\n\n  toggle = () => {\n    if (this.active) {\n      this.stop();\n      return;\n    }\n\n    this.start();\n  }\n}\n\nexport default (callbacks) => new Clock(callbacks);\n","import React from 'react';\nimport './Timer.css';\n\nconst TIMER_FORMAT = 'm:ss';\n\nconst Timer = ({ time }) => (\n  <div className=\"Timer\">\n    <div className=\"Timer__time\">\n      {time && time.toFormat(TIMER_FORMAT)}\n    </div>\n  </div>\n);\n\nexport default Timer;\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Units from '../Units';\nimport clock from '../../clock';\nimport Timer from '../Timer';\nimport './Exercise.css';\n\nconst PHASES = [\n  'endurance',\n  'power',\n  'hypertrophy',\n  'strength',\n];\n\nconst getPhases = (time) => {\n  let phases = [];\n  if (time < 1) { phases.push('endurance'); }\n  if (time > 1 && time < 2) { phases.push('power'); }\n  if (time < 2) { phases.push('hypertrophy'); }\n  if (time > 2 && time < 5) { phases.push('strength'); }\n  return phases;\n}\n\nclass Exercise extends PureComponent {\n  static defaultProps = {\n    sets: 3,\n    weight: 0,\n    reps: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.clock = clock({\n      onTick: this.handleTimerTick,\n      onReset: this.handleTimerReset,\n    });\n\n    this.state = {\n      completedSets: 0,\n      active: false,\n      time: this.clock.time,\n      phases: [],\n    };\n  }\n\n  get isOverResting() {\n    return this.state.active && this.state.phases.length === 0;\n  };\n\n  handleClick = () => {\n    if (this.state.active) {\n      this.clock.stop();\n\n      this.setState({\n        completedSets: this.state.completedSets + 1,\n        active: false,\n        time: this.clock.time,\n        phases: [],\n      });\n\n      return;\n    }\n\n    this.setState({\n      active: true,\n      phases: getPhases(0),\n    });\n\n    this.clock.start();\n  }\n\n  handleFinishExercise = (e) => {\n    e.stopPropagation();\n\n    this.setState({\n      completedSets: 0,\n      active: false,\n      phases: [],\n    });\n\n    this.clock.stop();\n  }\n\n  handleTimerTick = (time) => {\n    this.setState({\n      time: time,\n      phases: getPhases(time.as('minutes'))\n    });\n  }\n\n  handleTimerReset = () => {\n    // this.setState({\n    //   completedSets: this.state.completedSets + 1,\n    //   phases: getPhases(0)\n    // });\n  }\n\n  renderPhase = (phase) => {\n    const phaseClasses = cx(\n      'Exercise__phase',\n      { 'Exercise__phase--active': this.state.phases.includes(phase) },\n    );\n\n    return <div className={phaseClasses}>{phase}</div>;\n  };\n\n  render() {\n    const exerciseClasses = cx(\n      'Exercise',\n      this.state.phases.map(phase => `Exercise--phase-${phase}`),\n      { 'Exercise--over-resting': this.isOverResting },\n    );\n\n    return (\n      <div\n        className={`${exerciseClasses}`}\n        onClick={this.handleClick}\n      >\n        <div className=\"Exercise__meta\">\n          <div className=\"Exercise__phases\">\n            {PHASES.map(this.renderPhase)}\n          </div>\n        </div>\n        <div className=\"Exercise__timer\">\n          <Timer time={this.state.time} />\n        </div>\n        <div className=\"Exercise__progress\">\n          <div className=\"Exercise__sets\">Completed sets: {this.state.completedSets}</div>\n          <button type=\"button\" onClick={this.handleFinishExercise}>Finish exercise (reset)</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Exercise;\n","import { connect } from 'react-redux';\nimport Exercise from './Exercise';\n\nconst mapStateToProps = (state, props) => {\n  const exercises = state.exercises;\n  const exerciseId = props.match &&\n    props.match.params &&\n    props.match.params.exerciseId;\n  const exercise = exercises.find(\n    exercise => exercise.id === exerciseId,\n  );\n\n  return {\n    ...exercise,\n  };\n}\n\nexport default connect(mapStateToProps)(Exercise);\n","import React, { Component } from 'react';\nimport Home from './components/Home';\nimport Group from './components/Group';\nimport Exercise from './components/Exercise';\nimport Timer from './components/Timer';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/exercise\" component={Exercise}/>\n          <Redirect to=\"/exercise\" />\n          {/* <Route exact path=\"/exercise/:exerciseId\" component={Exercise}/>\n          <Route exact path=\"/group/:groupId\" component={Group}/>\n          <Route path=\"/\" component={Home}/> */}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}