{"version":3,"sources":["ducks/exercises.js","store.js","components/Home/Exercise.js","components/Home/Group.js","components/Home/Home.js","components/Group/Exercise.js","components/Group/Group.js","components/Timer.js","components/Exercise/Exercise.js","components/Exercise/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","id","name","weight","reps","sets","group","root","combineReducers","exercises","state","arguments","length","undefined","type","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","Exercise","_ref","react_default","a","createElement","Group","Link","to","concat","map","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onAddGroup","setState","addGroup","Redirect","onClick","groups","Home_Group","PureComponent","connect","groupBy","esm_extends","Group_Exercise","assign","groupId","match","params","filter","exercise","Timer","start","now","Date","active","update","onStart","stop","time","Duration","fromMillis","onStop","onTick","window","requestAnimationFrame","toggle","handleClickTime","onReset","handleClickDone","e","stopPropagation","className","toFormat","Component","defaultProps","PHASES","getPhases","phases","push","handleTimerStart","completedSets","handleTimerStop","handleTimerTick","as","handleTimerReset","renderPhase","phase","phaseClasses","cx","Exercise__phase--active","includes","exerciseClasses","Exercise--over-resting","isOverResting","src_components_Timer","exerciseId","find","objectSpread","App","Switch","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","es","integration_react","loading","HashRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44079d97.chunk.js","sourcesContent":["\nconst initialState = [\n  { id: 'foo', name: 'foo', weight: 44, reps: 4, sets: 3, group: 'alpha' },\n  { id: 'bar', name: 'bar', weight: 20, reps: 6, sets: 3, group: 'alpha' },\n  { id: 'bazz', name: 'bazz', weight: 14, reps: 8, sets: 3, group: 'bravo' },\n];\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\n\nconst actionCreators = {\n\n};\n\nconst actionTypes = {\n\n};\n\nexport {\n  actionCreators,\n  actionTypes,\n};\n","import { createStore, combineReducers } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport exercises from './ducks/exercises';\n\nconst root = combineReducers({\n  exercises,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  root,\n);\n\nconst store = createStore(persistedReducer);\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n\nexport default store;\n","import React from 'react';\n\nconst Exercise = ({ name }) => (\n  <div>\n    {name}\n  </div>\n);\n\nexport default Exercise;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Exercise from './Exercise';\n\nconst Group = ({\n  exercises,\n  group,\n}) => (\n  <Link to={`/group/${group}`}>\n    <div>\n      { exercises.map(Exercise) }\n    </div>\n    <div>\n      {group}\n    </div>\n  </Link>\n);\n\nexport { Group };\n\nexport default Group;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { map, groupBy } from 'lodash';\nimport Group from './Group';\n\nclass Home extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { addGroup: false };\n  }\n\n  onAddGroup = () => {\n    this.setState({ addGroup: true });\n  }\n\n  render() {\n    return (\n      <div>\n        { this.state.addGroup && <Redirect to=\"/group/new\" /> }\n        <button onClick={this.onAddGroup}>Create new group</button>\n        <div>\n          {map(\n            this.props.groups,\n            (exercises, group) =>\n              <Group\n                key={group}\n                exercises={exercises}\n                group={group}\n              />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const exercises = state.exercises;\n  const groups = groupBy(exercises, 'group');\n\n  return {\n    groups,\n  };\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Exercise = ({ name, id }) => (\n  <Link to={`/exercise/${id}`}>\n    {name}\n  </Link>\n);\n\nexport default Exercise;\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Exercise from './Exercise';\n\nclass Group extends PureComponent {\n  render() {\n    return (\n      <div>\n        <div>\n          { this.props.exercises.map(\n            ({ ...props }) =>\n              <Exercise {...props} key={props.id} />\n          ) }\n        </div>\n        <div>\n          {this.props.group}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state, props) {\n  const exercises = state.exercises;\n  const groupId = props.match &&\n    props.match.params &&\n    props.match.params.groupId;\n  const groupExercises = exercises.filter(\n    exercise => exercise.group === groupId,\n  );\n\n  return {\n    exercises: groupExercises,\n  };\n}\n\nexport default connect(mapStateToProps)(Group);\n","import React, { Component } from 'react';\nimport { Duration } from 'luxon';\nimport './Timer.css';\n\nconst TIMER_FORMAT = 'm:ss';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      start: null,\n      time: Duration.fromMillis(0),\n      active: false,\n    };\n  }\n\n  start = () => {\n    const now = new Date();\n\n    this.setState({\n      start: now,\n      active: true,\n    }, () => {\n      this.update();\n    });\n\n    this.props.onStart();\n  }\n\n  stop = () => {\n    this.setState({\n      active: false,\n      time: Duration.fromMillis(0),\n    });\n\n    this.props.onStop();\n  };\n\n  update = () => {\n    if (!this.state.active) { return; }\n\n    const now = new Date();\n    const time = Duration.fromMillis(now - this.state.start);\n\n    this.setState({\n      time,\n    });\n\n    this.props.onTick(time);\n\n    window.requestAnimationFrame(() => this.update());\n  }\n\n  toggle = () => {\n    if (this.state.active) { return this.stop(); }\n\n    return this.start();\n  }\n\n  handleClickTime = () => {\n    this.start();\n    if (this.state.active) { this.props.onReset(); }\n  }\n\n  handleClickDone = (e) => {\n    e.stopPropagation();\n    this.stop();\n  }\n\n  render() {\n    return (\n      <div className=\"Timer\">\n        <div\n          onClick={this.handleClickTime}\n          className=\"Timer__time\"\n        >\n          {this.state.time && this.state.time.toFormat(TIMER_FORMAT)}\n        </div>\n        <button\n          className=\"Timer__stop\"\n          type=\"button\"\n          onClick={this.handleClickDone}\n        >Reset</button>\n      </div>\n    );\n  }\n}\n\nTimer.defaultProps = {\n  onReset: () => {},\n  onStop: () => {},\n  onTick: () => {},\n  onStart: () => {},\n};\n\nexport default Timer;\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { Link } from 'react-router-dom';\nimport Units from '../Units';\nimport Timer from '../Timer';\nimport './Exercise.css';\n\nconst PHASES = [\n  'endurance',\n  'power',\n  'hypertrophy',\n  'strength',\n];\n\nconst getPhases = (time) => {\n  let phases = [];\n  if (time < 1) { phases.push('endurance'); }\n  if (time > 1 && time < 2) { phases.push('power'); }\n  if (time < 2) { phases.push('hypertrophy'); }\n  if (time > 2 && time < 5) { phases.push('strength'); }\n  return phases;\n}\n\nclass Exercise extends PureComponent {\n  static defaultProps = {\n    sets: 3,\n    weight: 0,\n    reps: 0,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      completedSets: 0,\n      active: false,\n      phases: [],\n    };\n  }\n\n  get isOverResting() {\n    return this.state.active && this.state.phases.length === 0;\n  };\n\n  handleTimerStart = () => {\n    this.setState({\n      completedSets: this.state.completedSets + 1,\n      active: true,\n      phases: getPhases(0),\n    });\n  }\n\n  handleTimerStop = () => {\n    this.setState({\n      completedSets: 0,\n      active: false,\n      phases: [],\n    });\n  }\n\n  handleTimerTick = (time) => {\n    this.setState({\n      phases: getPhases(time.as('minutes'))\n    });\n  }\n\n  handleTimerReset = () => {\n    this.setState({\n      completedSets: this.state.completedSets + 1,\n      phases: getPhases(0)\n    });\n  }\n\n  renderPhase = (phase) => {\n    const phaseClasses = cx(\n      'Exercise__phase',\n      { 'Exercise__phase--active': this.state.phases.includes(phase) },\n    );\n\n    return <div className={phaseClasses}>{phase}</div>;\n  };\n\n  render() {\n    const exerciseClasses = cx(\n      'Exercise',\n      this.state.phases.map(phase => `Exercise--phase-${phase}`),\n      { 'Exercise--over-resting': this.isOverResting },\n    );\n\n    return (\n      <div className={`${exerciseClasses}`}>\n        <div className=\"Exercise__meta\">\n          <div className=\"Exercise__phases\">\n            {PHASES.map(this.renderPhase)}\n          </div>\n        </div>\n        <div className=\"Exercise__timer\">\n          <Timer\n            onStart={this.handleTimerStart}\n            onStop={this.handleTimerStop}\n            onTick={this.handleTimerTick}\n            onReset={this.handleTimerReset}\n          />\n        </div>\n\n        <div className=\"Exercise__progress\">\n          Completed sets: {this.state.completedSets}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Exercise;\n","import { connect } from 'react-redux';\nimport Exercise from './Exercise';\n\nconst mapStateToProps = (state, props) => {\n  const exercises = state.exercises;\n  const exerciseId = props.match &&\n    props.match.params &&\n    props.match.params.exerciseId;\n  const exercise = exercises.find(\n    exercise => exercise.id === exerciseId,\n  );\n\n  return {\n    ...exercise,\n  };\n}\n\nexport default connect(mapStateToProps)(Exercise);\n","import React, { Component } from 'react';\nimport Home from './components/Home';\nimport Group from './components/Group';\nimport Exercise from './components/Exercise';\nimport Timer from './components/Timer';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/exercise\" component={Exercise}/>\n          <Redirect to=\"/exercise\" />\n          {/* <Route exact path=\"/exercise/:exerciseId\" component={Exercise}/>\n          <Route exact path=\"/group/:groupId\" component={Group}/>\n          <Route path=\"/\" component={Home}/> */}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}